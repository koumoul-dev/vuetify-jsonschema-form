import{_ as k}from"./CFEx-elu.js";import{Y as S}from"./CECeAqpN.js";import{r as B,j,t as y,v as i,z as o,D as h,F as g,A as r,E as t,B as l,y as b,x as a,I as V,J as O}from"./ByisMDkT.js";import{V as z,a as E}from"./BBSa3Fu9.js";import{V as L}from"./Cqo6ho7X.js";import{a as R,e as T,b as A,c as I,d as x}from"./C8afztul.js";import{V as q,n as d,s as D}from"./CKZqDQKa.js";import{V as F}from"./Be3hneb2.js";import{u as N}from"./DN9TUzyi.js";import{V as J}from"./DeQXvJQY.js";import{V as M}from"./Df6pQsKH.js";import"./CN5uW8HJ.js";import"./BosuxZz1.js";/* empty css        */import"./DrZo80TM.js";import"./CbRFv275.js";import"./7pVODepd.js";import"./B_d_YudO.js";const _={__name:"comp-schema",props:{name:{type:String,required:!0},schema:{type:Object,required:!0}},setup(s){const u=s,n=B(!1),e=c=>c.replace(/[-[\]/{}()*+?.\\^$|]/g,"\\$&"),m=["type: object","additionalProperties: false"].map(c=>new RegExp(e(c)+"(\\s*)","g")),w=[["$ref: https://json-layout.github.io/normalized-layout-keyword#/$defs/expression","Expression"],['$ref: "#/$defs/expression"',"Expression"],['$ref: "#/$defs/state-node-options-base"',"Options"],['$ref: "#/$defs/cols-obj"',"Responsive cols"],['$ref: "#/$defs/state-node-props-lib"',"Vuetify props"],['$ref: "#/$defs/state-node-slots-lib"',"Vuetify slots"],['$ref: "#/$defs/slot"',"Slot"],['$ref: "#/$defs/children"',"Children"],['$ref: "#/$defs/child-ref"',"Child reference"],['$ref: "#/$defs/child-composite"',"Child info"],['$ref: "#/$defs/select-items"',"Select items"],['$ref: "#/$defs/get-items"',"Get select items"]].map(c=>[new RegExp("(\\s*)"+e(c[0]),"g")," "+c[1]]),C=j(()=>{const c={...u.schema.properties};delete c.comp;let p=S.stringify(c);for(const f of m)p=p.replace(f,"");for(const f of w)p=p.replace(f[0],f[1]);return p});return(c,p)=>{const f=k;return i(),y(V,null,[o(t(E),{dense:""},{default:r(()=>[o(t(z),null,{default:r(()=>[o(t(L),{variant:"text",class:"text-none","append-icon":n.value?"mdi-chevron-up":"mdi-chevron-down",onClick:p[0]||(p[0]=H=>n.value=!n.value)},{default:r(()=>[l(b(s.name),1)]),_:1},8,["append-icon"])]),_:1})]),_:1}),n.value?(i(),h(f,{key:0,language:"yaml",class:"pl-6"},{default:r(()=>[a("pre",null,b(C.value),1)]),_:1})):g("",!0)],64)}}},P={key:0,class:"mb-2"},Y={__name:"comp-list-item",props:{comp:{type:Object,required:!0}},setup(s){const u=j(()=>{if(s.comp.name==="none")return[];const n=[];return s.comp.composite?n.push("composite"):n.push("simple"),s.comp.itemsBased&&n.push("items based"),s.comp.multipleCompat&&n.push("array compatible"),s.comp.focusable&&n.push("focusable"),s.comp.emitsBlur&&n.push("emits blur event"),s.comp.shouldDebounce&&n.push("can be debounced"),n});return(n,e)=>{const m=_;return i(),h(t(A),{class:"my-2 px-2"},{default:r(()=>[o(t(R),null,{default:r(()=>[a("strong",null,b(s.comp.name),1)]),_:1}),o(t(T),{class:"my-2"},{default:r(()=>[u.value.length?(i(),y("p",P,b(u.value.join(" - ")),1)):g("",!0),s.comp.schema?(i(),h(m,{key:1,schema:s.comp.schema,name:"specific properties"},null,8,["schema"])):g("",!0)]),_:1})]),_:1})}}},G={__name:"comp-list",props:{components:{type:Array,required:!0}},setup(s){return(u,n)=>{const e=Y;return i(),h(t(q),{variant:"flat"},{default:r(()=>[o(t(I),{lines:!1},{default:r(()=>[o(t(x)),(i(!0),y(V,null,O(s.components,m=>(i(),y(V,{key:m.name},[o(e,{comp:m},null,8,["comp"]),o(t(x))],64))),128))]),_:1})]),_:1})}}},v="Components",ue={__name:"components",setup(s){N({title:"VJSF - "+v});const u=[F.info];return(n,e)=>{const m=_,$=G;return i(),h(t(M),null,{default:r(()=>[a("h1",{class:"text-h2 mb-8"},b(v)),o(t(J),{type:"warning",variant:"outlined",class:"mb-8"},{default:r(()=>e[0]||(e[0]=[l(" This page describes the annotation system of json-schema for Vjsf in a somewhat technical way. For a more intuitive approach please explore the examples. ")])),_:1}),e[1]||(e[1]=a("h2",{class:"text-h4 mb-6"}," Vocabulary ",-1)),e[2]||(e[2]=a("p",{class:"mb-2"},[l(" The json schema provided to Vjsf can be enriched using the "),a("code",null,"layout keyword"),l(". This keyword is formally defined "),a("a",{href:"https://github.com/json-layout/json-layout/blob/main/vocabulary/src/normalized-layout/schema.json"},"here"),l(". It is automatically normalized for mor efficient processing, the normalized version is defined "),a("a",{href:"https://github.com/json-layout/json-layout/blob/main/vocabulary/src/normalized-layout/schema.json"},"here"),l(". ")],-1)),e[3]||(e[3]=a("p",{class:"mb-2"},[l(" A default component is automatically attributed to each property in the schema, it can be overwritten using "),a("code",null,"layout=component name"),l(" or "),a("code",null,"layout.comp=component name"),l(". The "),a("code",null,"layout keyword"),l(" content varies depending on the component. ")],-1)),e[4]||(e[4]=a("h2",{class:"text-h4 mb-6"}," Common component properties ",-1)),e[5]||(e[5]=a("p",{class:"mb-2"}," These properties are shared by multiple components depending on their characteristics. ",-1)),o(m,{schema:t(d).$defs["base-comp-object"],name:"base component properties"},null,8,["schema"]),o(m,{schema:t(d).$defs["composite-comp-object"].allOf[1],name:"composite component properties"},null,8,["schema"]),o(m,{schema:t(d).$defs["simple-comp-object"].allOf[1],name:"simple component properties (not composite)"},null,8,["schema"]),o(m,{schema:t(d).$defs["focusable-comp-object"].allOf[1],name:"focusable component properties"},null,8,["schema"]),o(m,{schema:t(d).$defs["items-based-comp-object"].allOf[1],name:"items based component properties (for selection controls)"},null,8,["schema"]),o(m,{schema:t(d).$defs["multiple-compat-comp-object"].allOf[1],name:"array compatible component properties"},null,8,["schema"]),e[6]||(e[6]=a("h2",{class:"text-h4 my-6"}," Standard components ",-1)),o($,{components:t(D)},null,8,["components"]),e[7]||(e[7]=a("h2",{class:"text-h4 my-6"}," Plugin components ",-1)),o($,{components:u})]),_:1})}}};export{ue as default};
